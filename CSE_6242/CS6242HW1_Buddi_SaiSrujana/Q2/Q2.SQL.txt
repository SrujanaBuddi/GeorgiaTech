drop table if exists movies;
create table movies(movie_id int,name text,genre text);
.separator "%"
.import movies.txt movies
drop table if exists ratings;
create table ratings(user_id integer,movie_id integer,rating real,timestamp integer);
.separator "%"
.import ratings.txt ratings
.separator ", "
create index movies_primary_index on movies(movie_id);
create index movies_secondary_index on ratings(movie_id);
select null;
select count	(movie_id) from movies where movie_id in (select distinct(movie_id) from ratings group by movie_id having avg(rating)>=3.5 and count(user_id)>=500);
select null;
select a.movie_id,a.name,count(b.rating) from movies a,ratings b where a.movie_id=b.movie_id group by b.movie_id having count(b.rating)>=2500 order by count(b.rating) DESC,a.name ASC;
select null;
select a.movie_id,a.name,avg(b.rating) from movies a,ratings b where a.movie_id=b.movie_id group by b.movie_id order by avg(b.rating) DESC,a.name LIMIT 10;
select null;
select a.name,avg(b.rating),count(b.user_id),a.genre from movies a,ratings b where a.movie_id=b.movie_id group by b.movie_id having count(b.user_id)>=1000 order by avg(b.rating) DESC,a.name,a.genre LIMIT 8;
select null;
drop view common_interests;
create view common_interests as select a.user_id,b.user_id,c.name from ratings a join ratings b on a.movie_id=b.movie_id and a.user_id<b.user_id and a.movie_id in (select movie_id from ratings group by movie_id having count(user_id)=10) join movies c on c.movie_id=a.movie_id;
select null;
select count(name) from common_interests;
select null;
drop table if exists movie_overview;
create virtual table movie_overview using fts3(id integer, name text, year integer, overview text,popularity decimal);
.separator ","
.import movie-overview.txt movie_overview
select null;
select count(*) from (select * from movie_overview where overview match 'life' union select * from movie_overview where overview match 'death');
select null;
SELECT id FROM (select * from movie_overview where overview match 'life' intersect select * from movie_overview where overview match 'about' EXCEPT select * from movie_overview where overview match 'life NEAR/5 about');
select null;
